[{"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\index.js":"1","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\App.js":"2","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\InfoCard.js":"4","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\Map.js":"5","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\Table.js":"6","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\util.js":"7","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\LineGraph.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":3691,"mtime":1611642412649,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":902,"mtime":1611592492002,"results":"13","hashOfConfig":"10"},{"size":606,"mtime":1611587795754,"results":"14","hashOfConfig":"10"},{"size":437,"mtime":1611589859396,"results":"15","hashOfConfig":"10"},{"size":1912,"mtime":1611650985550,"results":"16","hashOfConfig":"10"},{"size":2205,"mtime":1611593340935,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1jf9tng",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\index.js",[],["37","38"],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\App.js",["39","40"],"import React, {useState, useEffect} from 'react';\nimport {MenuItem, FormControl, Select, Card, CardContent} from '@material-ui/core'; \nimport './App.css';\nimport InfoCard from './InfoCard';\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport {sortData} from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport {prettyPrintStat} from \"./util\";\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    const getCountryData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        const countries = data.map((country) => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        let sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n        setMapCountries(data);\n      });\n    };\n    getCountryData();\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-left\">\n        <div className=\"app-header\">\n          <h1>COVID 19 TRACKER</h1>\n          <FormControl className=\"app-dropdown\">\n            <Select variant=\"outlined\" onChange={onCountryChange} value={country} >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n            \n          </FormControl>\n        </div>\n        <div className=\"app-cards\">\n          <InfoCard isRed active={casesType === \"cases\"} title=\"Coronavirus Cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={prettyPrintStat(countryInfo.cases)} onClick={e => setCasesType(\"cases\")} />\n          <InfoCard isBlue active={casesType === \"recovered\"} title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} total={prettyPrintStat(countryInfo.recovered)} onClick={e => setCasesType(\"recovered\")} />\n          <InfoCard isGray active={casesType === \"deaths\"} title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={prettyPrintStat(countryInfo.deaths)} onClick={e => setCasesType(\"deaths\")} />\n        </div>      \n        <Map casesType={casesType} center={mapCenter} zoom={mapZoom} countries={mapCountries}/>\n      </div>\n      <Card className=\"app-right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 className=\"app-graphtitle\">Worldwide new {casesType}</h3>\n          <LineGraph className=\"app-graph\" casesType={casesType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\InfoCard.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\Map.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\Table.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\util.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\covid-tracker\\src\\LineGraph.js",[],["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":18,"column":21,"nodeType":"49","messageId":"50","endLine":18,"endColumn":33},{"ruleId":"47","severity":1,"message":"51","line":19,"column":19,"nodeType":"49","messageId":"50","endLine":19,"endColumn":29},{"ruleId":"43","replacedBy":"52"},{"ruleId":"45","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'setMapCenter' is assigned a value but never used.","Identifier","unusedVar","'setMapZoom' is assigned a value but never used.",["54"],["55"],"no-global-assign","no-unsafe-negation"]